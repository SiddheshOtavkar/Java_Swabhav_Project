package com.miniproject.guitar.violation;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class Inventory {

	private List<Guitar> guitars;

	public Inventory() {
		guitars = new LinkedList<Guitar>();
	}

	public void addGuitar(String serialNumber, double price, String builder, String model, String type, String backWood,
			String topWood) {
		Guitar guitar = new Guitar(serialNumber, price, builder, model, type, backWood, topWood);

		guitars.add(guitar);
	}

	public Guitar getGuitar(String serialNumber) {
		for (Iterator<Guitar> i = guitars.iterator(); i.hasNext();) {
			Guitar guitar = i.next();
			if (guitar.getSerialNumber().equals(serialNumber)) {
				return guitar;
			}
		}
		return null;
	}
	
	public Guitar search(Guitar searchGuitar) {
		for (Guitar guitar : guitars) {
			String builder = searchGuitar.getBuilder();
			if ((builder != null) && (!builder.equalsIgnoreCase("")) && (!builder.equalsIgnoreCase(guitar.getBuilder()))) {
				continue;
			}

			String model = searchGuitar.getModel();
			if ((model != null) && (!model.equalsIgnoreCase("")) && (!model.equalsIgnoreCase(guitar.getModel()))) {
				continue;
			}

			String type = searchGuitar.getType();
			if ((type != null) && (!type.equalsIgnoreCase("")) && (!type.equalsIgnoreCase(guitar.getType()))) {
				continue;
			}

			String backWood = searchGuitar.getBackWood();
			if ((backWood != null) && (!backWood.equalsIgnoreCase("")) && (!backWood.equalsIgnoreCase(guitar.getBackWood()))) {
				continue;
			}

			String topWood = searchGuitar.getTopWood();
			if ((topWood != null) && (!topWood.equalsIgnoreCase("")) && (!topWood.equalsIgnoreCase(guitar.getTopWood()))) {
				continue;
			}

			// ✅ All fields match, return this guitar
			return guitar;
		}
		return null; // ❌ No match found
	}
	}
}
